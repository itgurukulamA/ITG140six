package com.example.demo.Sms;

import org.springframework.mail.SimpleMailMessage;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import org.apache.http.HttpStatus;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.google.common.net.MediaType;

@RestController
public class SmsController {  
	private static final String TOPIC_DESTINATION = "/lesson/sms";
	@Autowired 
	SmsService obj; 
	 @Autowired
	    private SimpMessagingTemplate webSocket;
	
	@PostMapping("/sendsms") 
	public String sendSms(@RequestBody TempOTP s ) 
	{ 
		
		return "message Sent Successfully";
	} 
	 
	@RequestMapping(value="/sendmail", method=RequestMethod.POST)
	public String Sendmail(@RequestBody Mail obj1)
	{
		
		return obj.sendMail1(obj1);
		
	} 
	@PostMapping("/otp")
	public ResponseEntity<String> ValidateToken(@RequestBody TempOTP otp){
		
		int sentotp=OTPpojo.getOtp();
		System.out.println(sentotp+":"+otp.getOtp());
		if(sentotp==otp.getOtp()) {
		    return new ResponseEntity<String>("Success otp", null);	
		}
		return new ResponseEntity<String>("faliure",null, HttpStatus.SC_UNAUTHORIZED);
	}
	 @RequestMapping(value = "/rajesh", method = RequestMethod.POST)
	    public ResponseEntity<Boolean> smsSubmit(@RequestBody SmsPojo sms) {
	        try{
	        	System.out.println("hello");
	            obj.send(sms);
	            System.out.println("hello");
	        }
	        catch(Exception e){

	        	 return new ResponseEntity<Boolean>(false,null);
	        }
			webSocket.convertAndSend(TOPIC_DESTINATION, getTimeStamp() + ": SMS has been sent!: "+sms.getTo());
	        return new ResponseEntity<Boolean>(true,null);
	 }
	 private String getTimeStamp() {
	       return DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss").format(LocalDateTime.now());
	    }
	  

}
